version: 2
jobs:
  build:
    docker:
      - image: ubuntu: 16.04
      - environment:
        PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        LD_LIBRARY_PATH: /usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/lib32:/usr/lib32
steps:
  - checkout:
    post:
      - git submodule sync
      - git submodule update --init
      - bash -c '[[ $(grep -cE "^ " Makefile.am) -eq 0 ]]'
  - restore_cache:
    keys:
      - ccache
   
  # get some dependencies
  - run: |
    sudo add-apt-repository -y ppa:valhalla-core/valhalla
    sudo apt-get update
    sudo apt-get install -y autoconf automake make libtool pkg-config g++ gcc jq lcov protobuf-compiler vim-common libboost1.54-all-dev libboost-all-dev libcurl4-openssl-dev libgeos-dev libgeos++-dev liblua5.2-dev libprime-server0.6.3-dev libprotobuf-dev libspatialite-dev libsqlite3-dev libsqlite3-mod-spatial python-all-dev zlib1g-dev liblz4-dev lua5.2 prime-server0.6.3-bin ccache
    # test some easier stuff
    (rc=0; for f in *.json; do python -c "import json; json.load(open('$f'))" || rc=$?; done; exit $rc;)
    (rc=0; for f in lua/*.lua; do lua $f || rc=$?; done; exit $rc;)
    (rc=0; for f in locales/*.json; do python -c "import json; json.load(open('$f'))" || rc=$?; done; exit $rc;)
    scripts/valhalla_build_config
    # great sadness: this has to go here if we want to have caching, as the cache is _only_ saved after the dependencies step.
    (mkdir -p ${HOME}/.ccache && echo "max_size = 4.0G" > ${HOME}/.ccache/ccache.conf)
    ./autogen.sh
    ./configure CC="ccache gcc" CXX="ccache g++" --enable-coverage
    ccache -z
    ccache -s
    (rc=0; make test -j$(nproc) || rc=$?; for f in test/*.log; do if [ $(grep -Fc FAIL $f) -ne 0 ]; then echo "----------${f}----------"; cat ${f}; fi; done; exit ${rc};)
    (mkdir -p test/logs && cp -rp test/*.log test/logs)
    ccache -s
    sudo make install
  - store_artifacts:
    path: test/logs
  - save_cache:
    key: ccache
    paths:
      - ~/.ccache
