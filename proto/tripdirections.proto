package valhalla.odin;

message TripDirections {
  
  message LatLng {
    optional float lat = 1;
    optional float lng = 2;
  }

  message Location {
    enum Type {
      kBreak = 0;
      kThrough = 1;
    }

    optional LatLng ll = 1;
    optional Type type = 2;
    optional uint32 heading = 3;        // 0-359
    optional string name = 4;
    optional string street = 5;
    optional string city = 6;
    optional string state = 7;
    optional string postal_code = 8;
    optional string country = 9;
    optional string date_time = 10;
  }

  message Summary {
    optional float length = 1;          // kilometers or miles based on units
    optional uint32 time = 2;           // seconds
  }
  
  message Maneuver {
    enum CardinalDirection {
      kNorth = 0;
      kNorthEast = 1;
      kEast = 2;
      kSouthEast = 3;
      kSouth = 4;
      kSouthWest = 5;
      kWest = 6;
      kNorthWest = 7;
    }
  
    // TODO - add others later
    enum Type {
      kNone = 0;
      kStart = 1;
      kStartRight = 2;
      kStartLeft = 3;
      kDestination = 4;
      kDestinationRight = 5;
      kDestinationLeft = 6;
      kBecomes = 7;
      kContinue = 8;
      kSlightRight = 9;
      kRight = 10;
      kSharpRight = 11;
      kUturnRight = 12;
      kUturnLeft = 13;
      kSharpLeft = 14;
      kLeft = 15;
      kSlightLeft = 16;
      kRampStraight = 17;
      kRampRight = 18;
      kRampLeft = 19;
      kExitRight = 20;
      kExitLeft = 21;
      kStayStraight = 22;
      kStayRight = 23;
      kStayLeft = 24;
      kMerge = 25;
      kRoundaboutEnter = 26;
      kRoundaboutExit = 27;
      kFerryEnter = 28;
      kFerryExit = 29;
    }
  
    optional Type type = 1;                                  // Maneuver type
    optional string text_instruction = 2;                    // instruction text
    repeated string street_name = 3;                         // street names
    optional float length = 4;                               // kilometers or miles based on units
    optional uint32 time = 5;                                // seconds
    optional CardinalDirection begin_cardinal_direction = 6; // CardinalDirection
    optional uint32 begin_heading = 7;                       // 0-360 
    optional uint32 begin_shape_index = 8;                   // inclusive index
    optional uint32 end_shape_index = 9;                     // inclusive index
    optional bool portions_toll = 10;                        // has portions toll
    optional bool portions_unpaved = 11;                     // has portions unpaved
  }
  
  optional uint64 trip_id = 1;
  optional uint32 leg_id = 2;
  optional uint32 leg_count = 3;
  repeated Location location = 4;
  optional Summary summary = 5;
  repeated Maneuver maneuver = 6;
  optional string shape = 7;
}

