package valhalla;

message TripPath {

  message LatLng {
    optional float lat = 1;
    optional float lng = 2;
  }
 
  message Location {
    optional LatLng ll = 1;
    optional string name = 2;
    optional string phone = 3;
    optional string street = 4;    
    optional string city = 5;    
    optional string state = 6;        // TODO - others as per OSM; county?
    optional string postal_code = 7;    
    optional string country = 8;    
  }
  
  message Exit {                  // TODO - exit vs sign
    optional string name = 1;
    optional string number = 2;
    repeated string branch = 3;
    repeated string toward = 4;
  }
  
  enum Driveability {
    kNone = 0;
    kForward = 1;
    kBackward = 2;
    kBoth = 3;
  }
  
  message Edge {
    optional uint64 id = 1;                 // TODO - OpenLR?
    repeated string name = 2;               // street names TODO - other info? shields?
    optional float length = 3;              // km
    optional float speed = 4;               // km/h
    optional uint32 begin_heading = 5;      // 0-360 
    optional uint32 end_heading = 6;        // 0-360
    optional uint32 begin_shape_index = 7;  // inclusive
    optional uint32 end_shape_index = 8;    // exclusive
    optional Driveability driveability = 9; // 
    optional bool ramp = 10;                //
    optional bool toll = 11;                //
    optional bool internal_link = 12;       // TODO - keep?
    repeated Exit exit = 13;
    optional uint32 end_node_index = 14;
  }
  
  message Node {
    optional uint64 id = 1;           // TODO - OpenLR?
    optional uint32 shape_index = 7;  // inclusive
    repeated Edge edge = 2;           // first one is the outbound path edge
  }
  
  message Leg {
    repeated Node node = 1;
  }

  repeated Location location = 1;
  repeated Leg leg = 2;
  optional string shape = 3;

}

