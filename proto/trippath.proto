package valhalla.odin;

message TripPath {

  message LatLng {
    optional float lat = 1;
    optional float lng = 2;
  }
 
  message Location {
    optional LatLng ll = 1;
    optional string name = 2;
    optional string phone = 3;
    optional string street = 4;    
    optional string city = 5;    
    optional string state = 6;        // TODO - others as per OSM; county?
    optional string postal_code = 7;    
    optional string country = 8;    
  }
  
  message Sign {
    repeated string exit_number = 1;  // 67B
    repeated string exit_branch = 2;  // I 95 North
    repeated string exit_toward = 3;  // New York
    repeated string exit_name = 4;    // Not used much in US; Used in Canada
  }
  
  enum Driveability {
    kNone = 0;
    kForward = 1;
    kBackward = 2;
    kBoth = 3;
  }
  
  enum RoadClass {
    kMotorway = 0;
    kTrunk = 1;
    kPrimary = 2;
    kSecondary = 3;
    kTertiaryUnclassified = 4;
    kResidential = 5;
    kService = 6;
    kOther = 7;
  }
  
  message Edge {
    repeated string name = 1;               // street names
    optional float length = 2;              // km
    optional float speed = 3;               // km/h
    optional RoadClass road_class = 4;
    optional uint32 begin_heading = 5;      // 0-359
    optional uint32 end_heading = 6;        // 0-359
    optional uint32 begin_shape_index = 7;  // inclusive
    optional uint32 end_shape_index = 8;    // inclusive
    optional Driveability driveability = 9;
    optional bool ramp = 10;
    optional bool turn_channel = 11;
    optional bool ferry = 12;
    optional bool rail_ferry = 13;
    optional bool toll = 14;
    optional bool unpaved = 15;
    optional bool tunnel = 16;
    optional bool bridge = 17;
    optional bool roundabout = 18;
    optional bool internal_intersection = 19;
    optional uint32 end_node_index = 20;
    optional Sign sign = 21;
  }
  
  message Node {
    optional uint64 id = 1;           // TODO - OpenLR?
    optional uint32 shape_index = 2;  //
    repeated Edge edge = 3;           // first one is the outbound path edge
  }
  
  optional uint64 trip_id = 1;
  optional uint32 leg_id = 2;
  repeated Location location = 3;
  repeated Node node = 4;
  optional string shape = 5;

}

